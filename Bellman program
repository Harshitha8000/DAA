#include<stdio.h>
void bellman(int v,int c[10][10],int n)
{
  int i,d[10],k,u,count;
  for(i=1;i<=n;i++)
  d[i]=c[v][i];
  for(k=2;k<=n-1;k++)
  for(u=1;u<=n;u++)
  {
   if(u!=v)
   {
     count=0;
     for(i=1;i<=n;i++)
      {
     if(c[u][i]!=0 && c[u][i]!=999)
       count=1;
      }
      if(count==1)
      for(i=1;i<=n;i++)
     if(d[u]>d[i]+c[i][u])
       d[u]=d[i]+c[i][u];
      }
   }
  for(k=1;k<=n;k++)
  printf("The shortest path from source vertex %d to %d is : %d\n",v,k,d[k]);
}
int main()
{
  int n,i,c[10][10],j,v;
  printf("Enter number of vertices:");
  scanf("%d",&n);
  printf("Enter the cost matrix:");
  for(i=1;i<=n;i++)
  for(j=1;j<=n;j++)
  scanf("%d",&c[i][j]);
  printf("Enter the source vertex:");
  scanf("%d",&v);
  bellman(v,c,n);
}
