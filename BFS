#include<stdio.h>
int a[20][20],n,q[20],vis[20],front=-1,rear=-1;
void enqueue(int i)
{
	if(front==-1)
	front=0;
	if(rear<=n-1)
	q[++rear]=i;	
}
int dequeue()
{
	int x=q[front];
	if(front==rear)
	front=rear=-1;
	else
	front++;
	return x;
}
void bfs(int v)
{
	int u,w;
	u=v;
	printf("%d->",u);
	vis[u]=1;
	while(1){
		for(w=1;w<=n;w++)
		{
			if(a[u][w]==1&&vis[w]==0){
				enqueue(w);
				vis[w]=1;
			}
		}
		if(front==-1&&rear==-1)
		return;
		else
		u=dequeue();
		printf("%d->",u);
	}
	
}
int main()
{
	int v,i,j;
	printf("enter no. of vertices:");
	scanf("%d",&n);
	printf("enter adjacency matrix:\n");
	for(i=1;i<=n;i++)
	for(j=1;j<=n;j++)
	scanf("%d",&a[i][j]);
	printf("enter source vertex:");
	scanf("%d",&v);
	bfs(v);
}
Input:
enter no. of vertices:6
enter adjacency matrix:
0 1 1 1 0 0
1 0 1 0 1 0
1 1 0 1 1 1
1 0 1 0 0 1
0 1 1 0 0 0
0 0 1 1 0 0
enter source vertex:1
Output:
1->2->3->4->5->6->
