#include<stdio.h>
void shortpath(int cost[20][20],int n,int v)
{
	int dist[20],j,i,w,s[20],u;
	for(i=1;i<=n;i++)
	{
		s[i]=0;
		dist[i]=cost[v][i];	
	}
	s[v]=1;
	dist[v]=0;
	for(i=2;i<=n-1;i++)
	{
		int mi=999;
		for(j=1;j<=n;j++){
			if(s[j]!=1&&dist[j]<mi){
				mi=dist[j];
				u=j;
}
		}
		s[u]=1;
		for(w=1;w<=n;w++){
			if(dist[u]!=99&&s[w]!=1)
				if(dist[w]>(dist[u]+cost[u][w]))
				dist[w]=dist[u]+cost[u][w];
		}		
	}
	for(i=1;i<=n;i++)
	printf("%d ",dist[i]);	
}
int main()
{
	int n,cost[20][20],i,j,v;
	printf("enter n value:");
	scanf("%d",&n);
	printf("enter cost adjacency matrix:\n");
	for(i=1;i<=n;i++)
	for(j=1;j<=n;j++)
	scanf("%d",&cost[i][j]);
	printf("enter source vertex:");
	scanf("%d",&v);
	shortpath(cost,n,v);	
}
Input:
enter n value:7
enter cost adjacency matrix:
0 1 2 99 99 99 3
99 0 99 4 99 99 99
99 99 0 99 3 1 99
99 99 99 0 99 1 99
99 99 99 99 0 2 99
99 99 99 99 99 0 99
99 99 99 99 99 8 0
enter source vertex:1
Output:
0 1 2 5 5 3 3
