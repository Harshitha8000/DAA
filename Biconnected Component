#include<stdio.h>
int n,a[20][20],s[20],dfn[20],l[20],num=1,top=-1;
void push(int i)
{
	s[++top]=i;
}
int pop()
{
	return s[top--];
}
int min(int a,int b)
{
	if(a<b)
	return a;
	else
	return b;
}
void bicom(int u,int v)
{
	int w,x,y;
	dfn[u]=num;
	l[u]=num;
	num++;
	for(w=1;w<=n;w++)
	{
		if(a[u][w]==1)
		{
			if((v!=w)&&(dfn[w]<=dfn[u])){
				push(w);
				push(u);}
			if(dfn[w]==0)
			{
				bicom(w,u);
				if(l[w]>=dfn[u])
				{
					printf("\n Bicoonected Component");
					do{
					x=pop();
					y=pop();
					printf("(%d %d)",x,y);
					}while(!((x==u&&y==w)||(x==w&&y==u)));
				}
				l[u]=min(l[u],l[w]);
			}
			else if(w!=v)
			l[u]=min(l[u],dfn[w]);
		}
	}
	
}
int main()
{
	int i,j;
	printf("enter n value:");
	scanf("%d",&n);
	printf("enter adjacency matrix:\n");
	for(i=1;i<=n;i++)
	for(j=1;j<=n;j++)
	scanf("%d",&a[i][j]);
	for(i=1;i<=n;i++)
	dfn[i]=0;
	bicom(1,0);
}
INPUT:
enter n value:10
enter adjacency matrix:
0 1 0 1 0 0 0 0 0 0
1 0 1 0 1 0 1 1 0 0
0 1 0 1 0 0 0 0 1 1
1 0 1 0 0 0 0 0 0 0
0 1 0 0 0 1 1 1 0 0
0 0 0 0 1 0 0 0 0 0
0 1 0 0 1 0 0 1 0 0
0 1 0 0 1 0 1 0 0 0
0 0 1 0 0 0 0 0 0 0
0 0 1 0 0 0 0 0 0 0

OUTPUT:
 Bicoonected Component(3 9)
 Bicoonected Component(3 10)
 Bicoonected Component(5 6)
 Bicoonected Component(8 5)(8 2)(7 8)(7 2)(5 7)(2 5)
 Bicoonected Component(4 1)(3 4)(2 3)(1 2) 
